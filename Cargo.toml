[workspace]
members = [
    "nginx-src",
    "nginx-sys",
    "examples",
]

[workspace.package]
edition = "2021"
license = "Apache-2.0"
homepage = "https://github.com/nginx/ngx-rust"
repository = "https://github.com/nginx/ngx-rust"
rust-version = "1.81.0"

[package]
name = "ngx"
version = "0.5.0"
autoexamples = false
categories = ["api-bindings", "network-programming"]
description = "FFI bindings to NGINX"
keywords = ["nginx", "module", "sys"]
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true

[package.metadata.docs.rs]
all-features = true
default-target = "x86_64-unknown-linux-gnu"
targets = []

[dependencies]
allocator-api2 = { version = "0.2.21", default-features = false }
async-task = { version = "4.7.1", optional = true }
lock_api = "0.4.13"
nginx-sys = { path = "nginx-sys", default-features=false, version = "0.5.0"}
pin-project-lite = { version = "0.2.16", optional = true }

[features]
default = ["std"]
async = [
    "alloc",
    "dep:async-task",
    "dep:pin-project-lite",
]
# Enables the components using memory allocation.
# If no `std` flag, `alloc` crate is internally used instead. This flag is mainly for `no_std` build.
alloc = ["allocator-api2/alloc"]
# Enables serde support for some of the provided types.
serde = [
    "allocator-api2/serde",
]
# Enables the components using `std` crate.
std = [
    "alloc",
    "allocator-api2/std"
]
# Build our own copy of the NGINX from `nginx-src` crate.
vendored = ["nginx-sys/vendored"]

[badges]
maintenance = { status = "experimental" }

[dev-dependencies]
tempfile = { version = "3.20.0", default-features = false }

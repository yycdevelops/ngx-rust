[package]
name = "examples"
version = "0.0.0"
publish = false
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true
# https://github.com/dependabot/dependabot-core/issues/1156
autobins = false

build = "../build.rs"

[dependencies]
nginx-sys = { path = "../nginx-sys/", default-features = false }
ngx = { path = "../", default-features = false, features = ["std"] }

[dev-dependencies]
aws-sign-v4 = "0.3.0"
chrono = "0.4.23"
http = "1.1.0"
# use unicode-rs idna backend for lower MSRV and faster builds
idna_adapter = "=1.1.0"
libc = "0.2.140"
tokio = { version = "1.33.0", features = ["full"] }

[[example]]
name = "curl"
path = "curl.rs"
crate-type = ["cdylib"]

[[example]]
name = "awssig"
path = "awssig.rs"
crate-type = ["cdylib"]

[[example]]
name = "httporigdst"
path = "httporigdst.rs"
crate-type = ["cdylib"]
required-features = ["linux"]

[[example]]
name = "upstream"
path = "upstream.rs"
crate-type = ["cdylib"]

[[example]]
name = "async"
path = "async.rs"
crate-type = ["cdylib"]

[[example]]
name = "shared_dict"
path = "shared_dict.rs"
crate-type = ["cdylib"]

[features]
default = ["export-modules", "ngx/vendored"]
# Generate `ngx_modules` table with module exports
# The exports table is required for building loadable modules with --crate-type cdylib
# outside of the NGINX buildsystem. However, cargo currently does not detect
# this configuration automatically.
# See https://github.com/rust-lang/rust/issues/20267
export-modules = []
linux = []
